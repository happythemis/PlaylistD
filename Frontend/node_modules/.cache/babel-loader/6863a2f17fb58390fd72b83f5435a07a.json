{"ast":null,"code":"var _jsxFileName = \"/Users/themislee/Documents/cs411finalFB/front_end/src/MyFavSong.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column' // alignItems: 'center',\n\n  },\n  avatar: {\n    margin: theme.spacing(1) // backgroundColor: theme.palette.secondary.main,\n\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst MyFavSong = props => {\n  const classes = useStyles(); // const [email, setEmail] = useState(\"\");\n  // const [pwd, setPwd] = useState(\"\");\n  // const [tried_login, setTried_login] = useState(0)\n\n  const [playlist, setPlaylist] = useState([]);\n  const [method_number, setMethod_number] = useState(1);\n  const [info_data, setInfo_data] = useState(\"\");\n  const [add_response, setAdd_response] = useState(\"\");\n  const [remove_s_id, setRemove_s_id] = useState(\"\");\n  const [remove_s_name, setRemove_s_name] = useState(\"\");\n  const [remove_response, setRemove_response] = useState(\"\");\n  useEffect(() => {\n    if (props.ls) {\n      fetch(\"/show_liked_songs?user_id=\" + props.ui).then(response => response.json()).then(data => {\n        setPlaylist(data['data']);\n      });\n    }\n  }, []);\n\n  const refresh_liked_list = () => {\n    if (props.ls) {\n      fetch(\"/show_liked_songs?user_id=\" + props.ui).then(response => response.json()).then(data => {\n        setPlaylist(data['data']);\n      });\n    }\n  };\n\n  if (!props.ls) {\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"HomeNav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \" Please sign in first\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Add Songs to My Favorite List\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"select-method-number-label\",\n    id: \"select-method-number\",\n    value: method_number,\n    onChange: e => setMethod_number(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Add your Top 50 Songs\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Add a Playlist\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"my_uri\",\n    label: method_number == 1 ? \"Spotify Username\" : \"Playlist URI\",\n    name: \"my_uri\",\n    autoComplete: \"my_uri\",\n    autoFocus: true,\n    value: info_data,\n    onChange: e => setInfo_data(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: async () => {\n      const user_id = props.ui;\n      const user_info = {\n        user_id,\n        method_number,\n        info_data\n      };\n      const response = await fetch(\"/add_liked_songs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user_info)\n      });\n\n      if (response.ok) {\n        setAdd_response(\"Songs Added Successfully\");\n        refresh_liked_list();\n      } else {\n        setAdd_response(\"Unsuccessful, please try again\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, add_response), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), \"Remove Song from the list\"), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"controllable-states-demo\",\n    options: playlist,\n    getOptionLabel: option => option.s_name,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Sone name\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 42\n      }\n    })),\n    inputvalue: remove_s_name,\n    onInputChange: (event, newInputValue) => {\n      setRemove_s_name(newInputValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: async () => {\n      var i;\n      var s_id = \"NONE\";\n\n      for (i = 0; i < playlist.length; i++) {\n        if (remove_s_name == playlist[i].s_name) {\n          s_id = playlist[i].s_id;\n          break;\n        }\n      }\n\n      const user_id = props.ui;\n      const user_info = {\n        user_id,\n        s_id\n      };\n      const response = await fetch(\"/delete_liked_songs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user_info)\n      });\n\n      if (response.ok) {\n        setRemove_response(\"Songs Removed Successfully\");\n        refresh_liked_list();\n        setRemove_s_name(\"\");\n      } else {\n        setRemove_response(\"Unsuccessful, please try again\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Remove\")), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, remove_response))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Song name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, \"Album\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, \"Artists\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, playlist.map(playlist => /*#__PURE__*/React.createElement(TableRow, {\n    key: playlist.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 23\n    }\n  }, playlist.s_name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, playlist.album_name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, playlist.album_release_date), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }, playlist.artist_names))))))))));\n};\n\nexport default MyFavSong;","map":{"version":3,"sources":["/Users/themislee/Documents/cs411finalFB/front_end/src/MyFavSong.js"],"names":["React","useState","useEffect","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","makeStyles","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Select","MenuItem","Autocomplete","useStyles","theme","paper","marginTop","spacing","display","flexDirection","avatar","margin","form","width","submit","MyFavSong","props","classes","playlist","setPlaylist","method_number","setMethod_number","info_data","setInfo_data","add_response","setAdd_response","remove_s_id","setRemove_s_id","remove_s_name","setRemove_s_name","remove_response","setRemove_response","ls","fetch","ui","then","response","json","data","refresh_liked_list","e","target","value","user_id","user_info","method","headers","body","JSON","stringify","ok","option","s_name","params","event","newInputValue","i","s_id","length","table","map","name","album_name","album_release_date","artist_names"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    // alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    // backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\nconst MyFavSong= (props) => {\n  const classes = useStyles();\n  // const [email, setEmail] = useState(\"\");\n  // const [pwd, setPwd] = useState(\"\");\n  // const [tried_login, setTried_login] = useState(0)\n  const [playlist, setPlaylist] = useState([]);\n  const [method_number, setMethod_number] = useState(1);\n  const [info_data, setInfo_data] = useState(\"\");\n  const [add_response, setAdd_response] = useState(\"\");\n  const [remove_s_id, setRemove_s_id] = useState(\"\");\n  const [remove_s_name, setRemove_s_name] = useState(\"\");\n  const [remove_response, setRemove_response] = useState(\"\");\n\n  useEffect(() => {\n    if(props.ls){\n      fetch(\"/show_liked_songs?user_id=\"+props.ui)\n      .then(response => response.json())\n      .then(data => {setPlaylist(data['data']);});\n    }\n  }, []);\n\n\n  const refresh_liked_list = () => {\n    if(props.ls){\n      fetch(\"/show_liked_songs?user_id=\"+props.ui)\n      .then(response => response.json())\n      .then(data => {setPlaylist(data['data']);});\n    }\n  }\n\n  if(!props.ls){\n    return(\n      <nav className = \"HomeNav\">\n        <h1> Please sign in first</h1>\n      </nav>\n    );\n  }\n\n  return (\n    <Container component=\"main\">\n      <Grid container item xs={12} spacing={6}>\n        <Grid item xs={3}>\n          <div className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n              Add Songs to My Favorite List\n            </Typography>\n            <Typography component=\"h1\" variant=\"h5\">\n              <br />\n            </Typography>\n            <Select\n              labelId=\"select-method-number-label\"\n              id=\"select-method-number\"\n              value={method_number}\n              onChange={e => setMethod_number(e.target.value)}\n            >\n              <MenuItem value={1}>Add your Top 50 Songs</MenuItem>\n              <MenuItem value={2}>Add a Playlist</MenuItem>\n            </Select>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"my_uri\"\n                label= {method_number == 1 ? \"Spotify Username\" : \"Playlist URI\"}\n                name=\"my_uri\"\n                autoComplete=\"my_uri\"\n                autoFocus\n                value={info_data}\n                onChange={e => setInfo_data(e.target.value)}\n              />\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={async () => {\n                  const user_id = props.ui;\n                  const user_info = {user_id, method_number, info_data};\n                  const response = await fetch(\"/add_liked_songs\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(user_info)\n                  });\n\n                  if(response.ok) {\n                    setAdd_response(\"Songs Added Successfully\");\n                    refresh_liked_list();\n                  }else{\n                    setAdd_response(\"Unsuccessful, please try again\");\n                  }\n                }}\n                >\n                Add\n              </Button>\n            </form>\n            <Typography component=\"h1\" variant=\"h5\">\n            {add_response}\n            </Typography>\n\n            <form className={classes.form} noValidate>\n              <Typography component=\"h1\" variant=\"h6\">\n                <br />\n                Remove Song from the list\n              </Typography>\n              <Autocomplete\n                id=\"controllable-states-demo\"\n                options={playlist}\n                getOptionLabel={(option) => option.s_name}\n                renderInput={(params) => <TextField {...params} label=\"Sone name\" variant=\"outlined\" />}\n                inputvalue={remove_s_name}\n                onInputChange={(event, newInputValue) => {setRemove_s_name(newInputValue);}}\n              />\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={async () => {\n                  var i;\n                  var s_id = \"NONE\";\n                  for (i = 0; i < playlist.length; i++){\n                    if(remove_s_name == playlist[i].s_name){\n                      s_id = playlist[i].s_id;\n                      break;\n                    }\n                  }\n                  const user_id = props.ui;\n                  const user_info = {user_id, s_id};\n                  const response = await fetch(\"/delete_liked_songs\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(user_info)\n                  });\n\n                  if(response.ok) {\n                    setRemove_response(\"Songs Removed Successfully\");\n                    refresh_liked_list();\n                    setRemove_s_name(\"\")\n                  }else{\n                    setRemove_response(\"Unsuccessful, please try again\");\n                  }\n                }}\n                >\n                Remove\n              </Button>\n            </form>\n          <Typography component=\"h1\" variant=\"h5\">\n            {remove_response}\n          </Typography>\n          </div>\n        </Grid>\n        <Grid item xs={9}>\n          <div className={classes.paper}>\n          <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    {/* <TableCell align=\"right\">Song Order</TableCell> */}\n                    <TableCell align=\"right\">Song name</TableCell>\n                    <TableCell align=\"right\">Album</TableCell>\n                    <TableCell align=\"right\">Release Date</TableCell>\n                    <TableCell align=\"right\">Artists</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {playlist.map((playlist) => (\n                    <TableRow key={playlist.name}>\n                      <TableCell align=\"right\">{playlist.s_name}</TableCell>\n                      <TableCell align=\"right\">{playlist.album_name}</TableCell>\n                      <TableCell align=\"right\">{playlist.album_release_date}</TableCell>\n                      <TableCell align=\"right\">{playlist.artist_names}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        </Grid>\n        \n      </Grid>\n    </Container>\n  );\n}\nexport default MyFavSong;"]},"metadata":{},"sourceType":"module"}