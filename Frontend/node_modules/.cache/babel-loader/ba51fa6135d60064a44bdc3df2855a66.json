{"ast":null,"code":"var _jsxFileName = \"/Users/themislee/Documents/cs411finalFB/front_end/src/MyGroups.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Divider from '@material-ui/core/Divider';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120 // maxWidth: 300,\n\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  },\n  paper2: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  title: {\n    // marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nconst MyGroups = props => {\n  const classes = useStyles();\n  const [group_list, setGroup_list] = useState([]);\n  const [selected_group_id, setSelected_group_id] = useState(\"\");\n  const [max_number, setMax_number] = useState(20);\n  const [order_by, setOrder_by] = useState(0);\n  const [playlist, setPlaylist] = useState([]);\n  const [group_name, setGroup_name] = useState(\"\");\n  const [view_response, setView_response] = useState(\"\");\n  const [remove_s_id, setRemove_s_id] = useState(\"\");\n  const [remove_s_name, setRemove_s_name] = useState(\"\");\n  const [remove_response, setRemove_response] = useState(\"\");\n  const [GAC, setGAC] = useState(\"\");\n  const [names, setNames] = useState(\"\");\n  const [danceability, setDanceability] = useState(0);\n  const [energy, setEnergy] = useState(0);\n  const [loudness, setLoudness] = useState(0);\n  const [valence, setValence] = useState(0);\n  const [add_response, setAdd_response] = useState(\"\");\n  const [spotify_username, setSpotify_username] = useState(\"\");\n  const [spotify_playlist_id, setSpotify_playlist_id] = useState(\"\");\n  const [export_response, setExport_response] = useState(\"\");\n  useEffect(() => {\n    if (props.ls) {\n      fetch(\"/get_joined_groups?user_id=\" + props.ui).then(response => response.json()).then(data => {\n        setGroup_list(data['data']);\n      });\n    }\n  }, []);\n\n  const refresh_group_list = () => {\n    if (props.ls) {\n      var request = \"/get_group_song_list?group_id=\" + selected_group_id;\n      request = request + \"&danceability=\" + danceability;\n      request = request + \"&energy=\" + energy;\n      request = request + \"&loudness=\" + loudness;\n      request = request + \"&valence=\" + valence;\n      request = request + \"&max_number=\" + max_number;\n      request = request + \"&order_by=\" + order_by;\n      fetch(request).then(response => response.json()).then(data => {\n        if (data['status'] == 0) {} else {\n          setPlaylist(data['data']);\n          setSelected_group_id(GAC);\n        }\n      });\n    }\n  };\n\n  if (!props.ls) {\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"HomeNav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \" Please sign in first\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Select a Group\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"select-method-number-label\",\n    id: \"select-method-number\",\n    value: selected_group_id,\n    onChange: e => setSelected_group_id(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, group_list.map(group => /*#__PURE__*/React.createElement(MenuItem, {\n    value: group.group_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, group.group_name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h5\",\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Preference\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"danceability-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, \"Danceability\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"danceability-select-label\",\n    id: \"danceability-select\",\n    value: danceability,\n    onChange: e => setDanceability(e.target.value),\n    label: \"option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, \"Low\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, \"High\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"energy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"Energy\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"energy-select-label\",\n    id: \"energy-select\",\n    value: energy,\n    onChange: e => setEnergy(e.target.value),\n    label: \"option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }, \"Low\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, \"High\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"loudness-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, \"Loudness\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"loudness-select-label\",\n    id: \"loudness-select\",\n    value: loudness,\n    onChange: e => setLoudness(e.target.value),\n    label: \"option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }, \"Low\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }\n  }, \"High\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"valence-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, \"Valence\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"valence-select-label\",\n    id: \"valence-select\",\n    value: valence,\n    onChange: e => setValence(e.target.value),\n    label: \"option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, \"Low\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, \"High\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"max_number\",\n    label: \"Max Number of Songs\",\n    name: \"max_number\",\n    autoComplete: \"max_number\",\n    value: max_number,\n    onChange: e => setMax_number(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"select-order-by-label\",\n    id: \"select-order-by\",\n    value: order_by,\n    onChange: e => setOrder_by(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, \"Order by Popularity\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, \"Order by Name\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, \"Order by Name Decreasing\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, \"Order From Old to New\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, \"Order From New to Old\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: async () => {\n      var request = \"/get_group_song_list?group_id=\" + selected_group_id;\n      request = request + \"&danceability=\" + danceability;\n      request = request + \"&energy=\" + energy;\n      request = request + \"&loudness=\" + loudness;\n      request = request + \"&valence=\" + valence;\n      request = request + \"&max_number=\" + max_number;\n      request = request + \"&order_by=\" + order_by;\n      fetch(request).then(response => response.json()).then(data => {\n        if (data['status'] == 0) {\n          setView_response(\"Unsuccessful, please try again\");\n          setRemove_response(\"\");\n          setAdd_response(\"\");\n          setExport_response(\"\");\n        } else {\n          setPlaylist(data['data']);\n          setGroup_name(data['group_name']);\n          setNames(data['names']);\n          setView_response(\"\");\n          setGAC(selected_group_id);\n          setRemove_response(\"\");\n          setAdd_response(\"\");\n          setExport_response(\"\");\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, view_response), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }), \"Add My Fav Songs to the group\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: async () => {\n      const group_id = GAC;\n      const user_id = props.ui;\n      const info = {\n        user_id,\n        group_id\n      };\n      const response = await fetch(\"/add_fav_songs_to_group\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(info)\n      });\n\n      if (response.ok) {\n        setAdd_response(\"Songs Added Successfully\");\n        setRemove_s_name(\"\");\n        setRemove_response(\"\");\n        refresh_group_list();\n        setExport_response(\"\");\n      } else {\n        setAdd_response(\"Unsuccessful, please try again\");\n        setExport_response(\"\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, \"Add Fav Songs\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h5\",\n    variant: \"body1\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  }, add_response), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }), \"Remove Song from the Group\"), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"controllable-states-demo\",\n    options: playlist,\n    getOptionLabel: option => option.s_name,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Sone Name\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 42\n      }\n    })),\n    inputvalue: remove_s_name,\n    onInputChange: (event, newInputValue) => {\n      setRemove_s_name(newInputValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: async () => {\n      var i;\n      var s_id = \"NONE\";\n\n      for (i = 0; i < playlist.length; i++) {\n        if (remove_s_name == playlist[i].s_name) {\n          s_id = playlist[i].s_id;\n          break;\n        }\n      }\n\n      const group_id = GAC;\n      const info = {\n        group_id,\n        s_id\n      };\n      const response = await fetch(\"/remove_song_from_group\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(info)\n      });\n\n      if (response.ok) {\n        setRemove_response(\"Songs Removed Successfully\");\n        setRemove_s_name(\"\");\n        setAdd_response(\"\");\n        refresh_group_list();\n        setExport_response(\"\");\n      } else {\n        setRemove_response(\"Unsuccessful, please try again\");\n        setExport_response(\"\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 15\n    }\n  }, \"Remove\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h5\",\n    variant: \"body1\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 15\n    }\n  }, remove_response), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h5\",\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }\n  }), \"Export Songs to Spotify\"), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"spotify_username\",\n    label: \"Spotify Username\",\n    name: \"spotify_username\",\n    autoComplete: \"spotify_username\",\n    value: spotify_username,\n    onChange: e => setSpotify_username(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"playlist_uri\",\n    label: \"Spotify Playlist URI\",\n    name: \"playlist_uri\",\n    autoComplete: \"playlist_uri\",\n    value: spotify_playlist_id,\n    onChange: e => setSpotify_playlist_id(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: async () => {\n      const username = spotify_username;\n      const playlist_id = spotify_playlist_id;\n      var i;\n      var song_ids = [];\n\n      for (i = 0; i < playlist.length; i++) {\n        song_ids.push(playlist[i].s_id);\n      }\n\n      const info = {\n        username,\n        playlist_id,\n        song_ids\n      };\n      const response = await fetch(\"/add_songs_to_spotify\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(info)\n      });\n\n      if (response.ok) {\n        setExport_response(\"Export Successfully\");\n      } else {\n        setExport_response(\"Unsuccessful, please try again\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }\n  }, \"Export to Spotify\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 15\n    }\n  }, export_response)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }, group_name != \"\" ? /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 15\n    }\n  }, group_name, \" (Group Access Code: \", GAC, \")\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 17\n    }\n  }), names) : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 21\n    }\n  }, \"Song name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 21\n    }\n  }, \"Album\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 21\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 21\n    }\n  }, \"Artists\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }, playlist.map(playlist => /*#__PURE__*/React.createElement(TableRow, {\n    key: playlist.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 23\n    }\n  }, playlist.s_name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 23\n    }\n  }, playlist.album_name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 23\n    }\n  }, playlist.album_release_date), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 23\n    }\n  }, playlist.artist_names))))))))));\n};\n\nexport default MyGroups;","map":{"version":3,"sources":["/Users/themislee/Documents/cs411finalFB/front_end/src/MyGroups.js"],"names":["React","useState","useEffect","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","makeStyles","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Select","MenuItem","Autocomplete","FormControl","InputLabel","Divider","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","formControl","minWidth","chips","flexWrap","chip","noLabel","paper2","title","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","MyGroups","props","classes","group_list","setGroup_list","selected_group_id","setSelected_group_id","max_number","setMax_number","order_by","setOrder_by","playlist","setPlaylist","group_name","setGroup_name","view_response","setView_response","remove_s_id","setRemove_s_id","remove_s_name","setRemove_s_name","remove_response","setRemove_response","GAC","setGAC","names","setNames","danceability","setDanceability","energy","setEnergy","loudness","setLoudness","valence","setValence","add_response","setAdd_response","spotify_username","setSpotify_username","spotify_playlist_id","setSpotify_playlist_id","export_response","setExport_response","ls","fetch","ui","then","response","json","data","refresh_group_list","request","e","target","value","map","group","group_id","user_id","info","method","headers","body","JSON","stringify","ok","option","s_name","params","event","newInputValue","i","s_id","length","username","playlist_id","song_ids","push","table","name","album_name","album_release_date","artist_names"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,MAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GADgC;AAOvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfN,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAPiC;AAWvCM,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF,GAX+B;AAcvCQ,EAAAA,WAAW,EAAE;AACXD,IAAAA,MAAM,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXS,IAAAA,QAAQ,EAAE,GAFC,CAGX;;AAHW,GAd0B;AAmBvCC,EAAAA,KAAK,EAAE;AACLT,IAAAA,OAAO,EAAE,MADJ;AAELU,IAAAA,QAAQ,EAAE;AAFL,GAnBgC;AAuBvCC,EAAAA,IAAI,EAAE;AACJL,IAAAA,MAAM,EAAE;AADJ,GAvBiC;AA0BvCM,EAAAA,OAAO,EAAE;AACPd,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ,GA1B8B;AA6BvCc,EAAAA,MAAM,EAAE;AACNf,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADL;AAENC,IAAAA,OAAO,EAAE,MAFH;AAGNC,IAAAA,aAAa,EAAE,QAHT;AAINC,IAAAA,UAAU,EAAE;AAJN,GA7B+B;AAmCvCY,EAAAA,KAAK,EAAE;AACL;AACAd,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP;AAnCgC,CAAZ,CAAD,CAA5B;AA2CA,MAAMa,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELZ,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;;AASA,MAAMiB,QAAQ,GAAGC,KAAD,IAAW;AACzB,QAAMC,OAAO,GAAG5B,SAAS,EAAzB;AAEA,QAAM,CAAC6B,UAAD,EAAaC,aAAb,IAA8BxD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACyD,iBAAD,EAAoBC,oBAApB,IAA4C1D,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAAC2D,UAAD,EAAaC,aAAb,IAA8B5D,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC6D,QAAD,EAAWC,WAAX,IAA0B9D,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAAC+D,QAAD,EAAWC,WAAX,IAA0BhE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiE,UAAD,EAAaC,aAAb,IAA8BlE,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmE,aAAD,EAAgBC,gBAAhB,IAAoCpE,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACqE,WAAD,EAAcC,cAAd,IAAgCtE,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACuE,aAAD,EAAgBC,gBAAhB,IAAoCxE,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACyE,eAAD,EAAkBC,kBAAlB,IAAwC1E,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAAC2E,GAAD,EAAMC,MAAN,IAAgB5E,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAC6E,KAAD,EAAQC,QAAR,IAAoB9E,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAAC+E,YAAD,EAAeC,eAAf,IAAkChF,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACiF,MAAD,EAASC,SAAT,IAAsBlF,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACmF,QAAD,EAAWC,WAAX,IAA0BpF,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACqF,OAAD,EAAUC,UAAV,IAAwBtF,QAAQ,CAAC,CAAD,CAAtC;AAEA,QAAM,CAACuF,YAAD,EAAeC,eAAf,IAAkCxF,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACyF,gBAAD,EAAmBC,mBAAnB,IAA0C1F,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAC2F,mBAAD,EAAsBC,sBAAtB,IAAgD5F,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAAC6F,eAAD,EAAkBC,kBAAlB,IAAwC9F,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGoD,KAAK,CAAC0C,EAAT,EAAY;AACVC,MAAAA,KAAK,CAAC,gCAA8B3C,KAAK,CAAC4C,EAArC,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AAAC7C,QAAAA,aAAa,CAAC6C,IAAI,CAAC,MAAD,CAAL,CAAb;AAA6B,OAF5C;AAGD;AACF,GANQ,EAMN,EANM,CAAT;;AASA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAGjD,KAAK,CAAC0C,EAAT,EAAY;AACV,UAAIQ,OAAO,GAAG,mCAAiC9C,iBAA/C;AACA8C,MAAAA,OAAO,GAAGA,OAAO,GAAG,gBAAV,GAA6BxB,YAAvC;AACAwB,MAAAA,OAAO,GAAGA,OAAO,GAAG,UAAV,GAAuBtB,MAAjC;AACAsB,MAAAA,OAAO,GAAGA,OAAO,GAAG,YAAV,GAAyBpB,QAAnC;AACAoB,MAAAA,OAAO,GAAGA,OAAO,GAAG,WAAV,GAAwBlB,OAAlC;AACAkB,MAAAA,OAAO,GAAGA,OAAO,GAAG,cAAV,GAA2B5C,UAArC;AACA4C,MAAAA,OAAO,GAAGA,OAAO,GAAG,YAAV,GAAyB1C,QAAnC;AACAmC,MAAAA,KAAK,CAACO,OAAD,CAAL,CACCL,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,YAAGA,IAAI,CAAC,QAAD,CAAJ,IAAkB,CAArB,EAAuB,CAEtB,CAFD,MAEK;AACHrC,UAAAA,WAAW,CAACqC,IAAI,CAAC,MAAD,CAAL,CAAX;AACA3C,UAAAA,oBAAoB,CAACiB,GAAD,CAApB;AACD;AACF,OATD;AAUD;AACF,GApBD;;AAsBA,MAAG,CAACtB,KAAK,CAAC0C,EAAV,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF;AAKD;;AAED,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,OAAO,EAAE,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEzC,OAAO,CAAC1B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,4BADV;AAEE,IAAA,EAAE,EAAC,sBAFL;AAGE,IAAA,KAAK,EAAE6B,iBAHT;AAIE,IAAA,QAAQ,EAAE+C,CAAC,IAAI9C,oBAAoB,CAAC8C,CAAC,CAACC,MAAF,CAASC,KAAV,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGnD,UAAU,CAACoD,GAAX,CAAgBC,KAAD,iBACd,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAK,CAACC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,KAAK,CAAC3C,UAAxC,CADD,CANH,CAPF,CADF,eAoBE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAEX,OAAO,CAACT,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,SAAS,EAAES,OAAO,CAAChB,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,eAEG,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,2BADV;AAEE,IAAA,EAAE,EAAC,qBAFL;AAGE,IAAA,KAAK,EAAEyC,YAHT;AAIE,IAAA,QAAQ,EAAEyB,CAAC,IAAIxB,eAAe,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJhC;AAKE,IAAA,KAAK,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eASE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CAFH,CADD,CADF,CADF,eAmBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,SAAS,EAAEpD,OAAO,CAAChB,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,qBADV;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,KAAK,EAAE2C,MAHT;AAIE,IAAA,QAAQ,EAAEuB,CAAC,IAAItB,SAAS,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ1B;AAKE,IAAA,KAAK,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eASE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CAFF,CADF,CADF,CAnBF,eAqCE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,SAAS,EAAEpD,OAAO,CAAChB,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,uBADV;AAEE,IAAA,EAAE,EAAC,iBAFL;AAGE,IAAA,KAAK,EAAE6C,QAHT;AAIE,IAAA,QAAQ,EAAEqB,CAAC,IAAIpB,WAAW,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ5B;AAKE,IAAA,KAAK,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eASE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CAFF,CADF,CADF,CArCF,eAuDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,SAAS,EAAEpD,OAAO,CAAChB,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,eAEG,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,sBADV;AAEE,IAAA,EAAE,EAAC,gBAFL;AAGE,IAAA,KAAK,EAAE+C,OAHT;AAIE,IAAA,QAAQ,EAAEmB,CAAC,IAAIlB,UAAU,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ3B;AAKE,IAAA,KAAK,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eASE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CAFH,CADD,CADF,CAvDF,CAJF,CApBF,eAmGE;AAAK,IAAA,SAAS,EAAEpD,OAAO,CAAC1B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAE0B,OAAO,CAACpB,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,EAAE,EAAC,YALL;AAME,IAAA,KAAK,EAAE,qBANT;AAOE,IAAA,IAAI,EAAC,YAPP;AAQE,IAAA,YAAY,EAAC,YARf;AASE,IAAA,KAAK,EAAEyB,UATT;AAUE,IAAA,QAAQ,EAAE6C,CAAC,IAAI5C,aAAa,CAAC4C,CAAC,CAACC,MAAF,CAASC,KAAV,CAV9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAaE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,uBADV;AAEE,IAAA,EAAE,EAAC,iBAFL;AAGE,IAAA,KAAK,EAAE7C,QAHT;AAIE,IAAA,QAAQ,EAAE2C,CAAC,IAAI1C,WAAW,CAAC0C,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,eAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCARF,eASE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,eAUE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVF,CAbF,eAyBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAEpD,OAAO,CAAClB,MALrB;AAME,IAAA,OAAO,EAAE,YAAY;AACnB,UAAImE,OAAO,GAAG,mCAAiC9C,iBAA/C;AACA8C,MAAAA,OAAO,GAAGA,OAAO,GAAG,gBAAV,GAA6BxB,YAAvC;AACAwB,MAAAA,OAAO,GAAGA,OAAO,GAAG,UAAV,GAAuBtB,MAAjC;AACAsB,MAAAA,OAAO,GAAGA,OAAO,GAAG,YAAV,GAAyBpB,QAAnC;AACAoB,MAAAA,OAAO,GAAGA,OAAO,GAAG,WAAV,GAAwBlB,OAAlC;AACAkB,MAAAA,OAAO,GAAGA,OAAO,GAAG,cAAV,GAA2B5C,UAArC;AACA4C,MAAAA,OAAO,GAAGA,OAAO,GAAG,YAAV,GAAyB1C,QAAnC;AACAmC,MAAAA,KAAK,CAACO,OAAD,CAAL,CACCL,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,YAAGA,IAAI,CAAC,QAAD,CAAJ,IAAkB,CAArB,EAAuB;AACrBjC,UAAAA,gBAAgB,CAAC,gCAAD,CAAhB;AACAM,UAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAc,UAAAA,eAAe,CAAC,EAAD,CAAf;AACAM,UAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,SALD,MAKK;AACH9B,UAAAA,WAAW,CAACqC,IAAI,CAAC,MAAD,CAAL,CAAX;AACAnC,UAAAA,aAAa,CAACmC,IAAI,CAAC,YAAD,CAAL,CAAb;AACAvB,UAAAA,QAAQ,CAACuB,IAAI,CAAC,OAAD,CAAL,CAAR;AACAjC,UAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAQ,UAAAA,MAAM,CAACnB,iBAAD,CAAN;AACAiB,UAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAc,UAAAA,eAAe,CAAC,EAAD,CAAf;AACAM,UAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD;AACF,OAlBD;AAmBD,KAjCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,eA8DE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,aADH,CA9DF,eAiEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjEF,eAkEE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kCAlEF,eAsEE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAEb,OAAO,CAAClB,MALrB;AAME,IAAA,OAAO,EAAE,YAAY;AACnB,YAAMyE,QAAQ,GAAGlC,GAAjB;AACA,YAAMmC,OAAO,GAAGzD,KAAK,CAAC4C,EAAtB;AACA,YAAMc,IAAI,GAAG;AAACD,QAAAA,OAAD;AAAUD,QAAAA;AAAV,OAAb;AACA,YAAMV,QAAQ,GAAG,MAAMH,KAAK,CAAC,yBAAD,EAA4B;AACtDgB,QAAAA,MAAM,EAAE,MAD8C;AAEtDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6C;AAKtDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AALgD,OAA5B,CAA5B;;AAOA,UAAGZ,QAAQ,CAACkB,EAAZ,EAAgB;AACd7B,QAAAA,eAAe,CAAC,0BAAD,CAAf;AACAhB,QAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACA4B,QAAAA,kBAAkB;AAClBR,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,OAND,MAMK;AACHN,QAAAA,eAAe,CAAC,gCAAD,CAAf;AACAM,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD;AACF,KA3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAtEF,eAqGE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,OAAnC;AAA2C,IAAA,SAAS,EAAExC,OAAO,CAACT,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG0C,YADH,CArGF,eAwGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxGF,eAyGE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,+BAzGF,eA6GE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,0BADL;AAEE,IAAA,OAAO,EAAExB,QAFX;AAGE,IAAA,cAAc,EAAGuD,MAAD,IAAYA,MAAM,CAACC,MAHrC;AAIE,IAAA,WAAW,EAAGC,MAAD,iBAAY,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,WAA7B;AAAyC,MAAA,OAAO,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJ3B;AAKE,IAAA,UAAU,EAAEjD,aALd;AAME,IAAA,aAAa,EAAE,CAACkD,KAAD,EAAQC,aAAR,KAA0B;AAAClD,MAAAA,gBAAgB,CAACkD,aAAD,CAAhB;AAAiC,KAN7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7GF,eAqHE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAEpE,OAAO,CAAClB,MALrB;AAME,IAAA,OAAO,EAAE,YAAY;AACnB,UAAIuF,CAAJ;AACA,UAAIC,IAAI,GAAG,MAAX;;AACA,WAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG5D,QAAQ,CAAC8D,MAAzB,EAAiCF,CAAC,EAAlC,EAAqC;AACnC,YAAGpD,aAAa,IAAIR,QAAQ,CAAC4D,CAAD,CAAR,CAAYJ,MAAhC,EAAuC;AACrCK,UAAAA,IAAI,GAAG7D,QAAQ,CAAC4D,CAAD,CAAR,CAAYC,IAAnB;AACA;AACD;AACF;;AACD,YAAMf,QAAQ,GAAGlC,GAAjB;AACA,YAAMoC,IAAI,GAAG;AAACF,QAAAA,QAAD;AAAWe,QAAAA;AAAX,OAAb;AACA,YAAMzB,QAAQ,GAAG,MAAMH,KAAK,CAAC,yBAAD,EAA4B;AACtDgB,QAAAA,MAAM,EAAE,MAD8C;AAEtDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6C;AAKtDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AALgD,OAA5B,CAA5B;;AAQA,UAAGZ,QAAQ,CAACkB,EAAZ,EAAgB;AACd3C,QAAAA,kBAAkB,CAAC,4BAAD,CAAlB;AACAF,QAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAgB,QAAAA,eAAe,CAAC,EAAD,CAAf;AACAc,QAAAA,kBAAkB;AAClBR,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,OAND,MAMK;AACHpB,QAAAA,kBAAkB,CAAC,gCAAD,CAAlB;AACAoB,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD;AACF,KAnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArHF,eA4JE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,OAAnC;AAA2C,IAAA,SAAS,EAAExC,OAAO,CAACT,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG4B,eADH,CA5JF,eA+JE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/JF,eAgKE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAEnB,OAAO,CAACT,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,4BAhKF,eAoKE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,EAAE,EAAC,kBALL;AAME,IAAA,KAAK,EAAE,kBANT;AAOE,IAAA,IAAI,EAAC,kBAPP;AAQE,IAAA,YAAY,EAAC,kBARf;AASE,IAAA,KAAK,EAAE4C,gBATT;AAUE,IAAA,QAAQ,EAAEe,CAAC,IAAId,mBAAmB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAVpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApKF,eAgLE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,EAAE,EAAC,cALL;AAME,IAAA,KAAK,EAAE,sBANT;AAOE,IAAA,IAAI,EAAC,cAPP;AAQE,IAAA,YAAY,EAAC,cARf;AASE,IAAA,KAAK,EAAEf,mBATT;AAUE,IAAA,QAAQ,EAAEa,CAAC,IAAIZ,sBAAsB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAVvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhLF,eA4LE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAEpD,OAAO,CAAClB,MALrB;AAME,IAAA,OAAO,EAAE,YAAY;AACnB,YAAM0F,QAAQ,GAAGrC,gBAAjB;AACA,YAAMsC,WAAW,GAAGpC,mBAApB;AACA,UAAIgC,CAAJ;AACA,UAAIK,QAAQ,GAAG,EAAf;;AACA,WAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG5D,QAAQ,CAAC8D,MAAzB,EAAiCF,CAAC,EAAlC,EAAqC;AACnCK,QAAAA,QAAQ,CAACC,IAAT,CAAclE,QAAQ,CAAC4D,CAAD,CAAR,CAAYC,IAA1B;AACD;;AACD,YAAMb,IAAI,GAAG;AAACe,QAAAA,QAAD;AAAWC,QAAAA,WAAX;AAAwBC,QAAAA;AAAxB,OAAb;AACA,YAAM7B,QAAQ,GAAG,MAAMH,KAAK,CAAC,uBAAD,EAA0B;AACpDgB,QAAAA,MAAM,EAAE,MAD4C;AAEpDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF2C;AAKpDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAL8C,OAA1B,CAA5B;;AAQA,UAAGZ,QAAQ,CAACkB,EAAZ,EAAgB;AACdvB,QAAAA,kBAAkB,CAAC,qBAAD,CAAlB;AACD,OAFD,MAEK;AACHA,QAAAA,kBAAkB,CAAC,gCAAD,CAAlB;AACD;AACF,KA5BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA5LF,eA4NE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,eADH,CA5NF,CADF,CAnGF,CADF,eAwUE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEvC,OAAO,CAAC1B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGqC,UAAU,IAAI,EAAd,gBACC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UADH,2BACoCU,GADpC,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGE,KAHH,CADD,gBAOC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAWE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAE1D,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEmC,OAAO,CAAC4E,KAA1B;AAAiC,kBAAW,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF,CADF,eAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnE,QAAQ,CAAC4C,GAAT,CAAc5C,QAAD,iBACZ,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACoE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBpE,QAAQ,CAACwD,MAAlC,CADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBxD,QAAQ,CAACqE,UAAlC,CAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBrE,QAAQ,CAACsE,kBAAlC,CAHF,eAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBtE,QAAQ,CAACuE,YAAlC,CAJF,CADD,CADH,CAVF,CADF,CAXF,CADF,CAxUF,CADF,CADF;AAkXD,CArbD;;AAsbA,eAAelF,QAAf","sourcesContent":["import React, {useState, useEffect}from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Divider from '@material-ui/core/Divider';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    // maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n  paper2: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    // marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst MyGroups= (props) => {\n  const classes = useStyles();\n\n  const [group_list, setGroup_list] = useState([]);\n  const [selected_group_id, setSelected_group_id] = useState(\"\");\n  const [max_number, setMax_number] = useState(20);\n  const [order_by, setOrder_by] = useState(0);\n  const [playlist, setPlaylist] = useState([]);\n  const [group_name, setGroup_name] = useState(\"\");\n  const [view_response, setView_response] = useState(\"\");\n  const [remove_s_id, setRemove_s_id] = useState(\"\");\n  const [remove_s_name, setRemove_s_name] = useState(\"\");\n  const [remove_response, setRemove_response] = useState(\"\");\n\n  const [GAC, setGAC] = useState(\"\");\n  const [names, setNames] = useState(\"\");\n\n  const [danceability, setDanceability] = useState(0);\n  const [energy, setEnergy] = useState(0);\n  const [loudness, setLoudness] = useState(0);\n  const [valence, setValence] = useState(0);\n\n  const [add_response, setAdd_response] = useState(\"\");\n\n  const [spotify_username, setSpotify_username] = useState(\"\");\n  const [spotify_playlist_id, setSpotify_playlist_id] = useState(\"\");\n  const [export_response, setExport_response] = useState(\"\");\n\n  useEffect(() => {\n    if(props.ls){\n      fetch(\"/get_joined_groups?user_id=\"+props.ui)\n      .then(response => response.json())\n      .then(data => {setGroup_list(data['data']);});\n    }\n  }, []);\n\n\n  const refresh_group_list = () => {\n    if(props.ls){\n      var request = \"/get_group_song_list?group_id=\"+selected_group_id;\n      request = request + \"&danceability=\" + danceability;\n      request = request + \"&energy=\" + energy;\n      request = request + \"&loudness=\" + loudness;\n      request = request + \"&valence=\" + valence;\n      request = request + \"&max_number=\" + max_number;\n      request = request + \"&order_by=\" + order_by;\n      fetch(request)\n      .then(response => response.json())\n      .then(data => {\n        if(data['status'] == 0){\n\n        }else{\n          setPlaylist(data['data']);\n          setSelected_group_id(GAC);\n        }\n      })\n    }\n  }\n\n  if(!props.ls){\n    return(\n      <nav className = \"HomeNav\">\n        <h1> Please sign in first</h1>\n      </nav>\n    );\n  }\n\n  return (\n    <Container component=\"main\">\n      <Grid container item xs={12} spacing={2}>\n        <Grid item xs={3}>\n          <div className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n              Select a Group\n            </Typography>\n            <Typography component=\"h1\" variant=\"h5\">\n              <br />\n            </Typography>\n            <Select\n              labelId=\"select-method-number-label\"\n              id=\"select-method-number\"\n              value={selected_group_id}\n              onChange={e => setSelected_group_id(e.target.value)}\n            >\n              {group_list.map((group) =>\n                <MenuItem value={group.group_id}>{group.group_name}</MenuItem>\n              )}\n            </Select>\n          </div>\n          \n          <div className=\"container\">\n            <Typography component=\"h5\" variant=\"h6\" className={classes.title}>\n              Preference\n            </Typography>\n            <Grid container>\n              <Grid item xs={12}>\n                <div>\n                 <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"danceability-label\">Danceability</InputLabel>\n                    <Select\n                      labelId=\"danceability-select-label\"\n                      id=\"danceability-select\"\n                      value={danceability}\n                      onChange={e => setDanceability(e.target.value)}\n                      label=\"option\"\n                    >\n                      <MenuItem value={0}></MenuItem>\n                      <MenuItem value={1}>Low</MenuItem>\n                      <MenuItem value={2}>High</MenuItem>\n                    </Select>\n                 </FormControl>\n                 </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div>\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"energy-label\">Energy</InputLabel>\n                    <Select\n                      labelId=\"energy-select-label\"\n                      id=\"energy-select\"\n                      value={energy}\n                      onChange={e => setEnergy(e.target.value)}\n                      label=\"option\"\n                    >\n                      <MenuItem value={0}></MenuItem>\n                      <MenuItem value={1}>Low</MenuItem>\n                      <MenuItem value={2}>High</MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div> \n                  <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"loudness-label\">Loudness</InputLabel>\n                    <Select\n                      labelId=\"loudness-select-label\"\n                      id=\"loudness-select\"\n                      value={loudness}\n                      onChange={e => setLoudness(e.target.value)}\n                      label=\"option\"\n                    >\n                      <MenuItem value={0}></MenuItem>\n                      <MenuItem value={1}>Low</MenuItem>\n                      <MenuItem value={2}>High</MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div>\n                 <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"valence-label\">Valence</InputLabel>\n                    <Select\n                      labelId=\"valence-select-label\"\n                      id=\"valence-select\"\n                      value={valence}\n                      onChange={e => setValence(e.target.value)}\n                      label=\"option\"\n                    >\n                      <MenuItem value={0}></MenuItem>\n                      <MenuItem value={1}>Low</MenuItem>\n                      <MenuItem value={2}>High</MenuItem>\n                    </Select>\n                 </FormControl>\n                 </div>\n              </Grid>\n            </Grid>\n          </div>\n          <div className={classes.paper}>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"max_number\"\n                label= \"Max Number of Songs\"\n                name=\"max_number\"\n                autoComplete=\"max_number\"\n                value={max_number}\n                onChange={e => setMax_number(e.target.value)}\n              />\n              <Select\n                labelId=\"select-order-by-label\"\n                id=\"select-order-by\"\n                value={order_by}\n                onChange={e => setOrder_by(e.target.value)}\n              >\n                <MenuItem value={0}>Order by Popularity</MenuItem>\n                <MenuItem value={1}>Order by Name</MenuItem>\n                <MenuItem value={2}>Order by Name Decreasing</MenuItem>\n                <MenuItem value={3}>Order From Old to New</MenuItem>\n                <MenuItem value={4}>Order From New to Old</MenuItem>\n              </Select>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={async () => {\n                  var request = \"/get_group_song_list?group_id=\"+selected_group_id;\n                  request = request + \"&danceability=\" + danceability;\n                  request = request + \"&energy=\" + energy;\n                  request = request + \"&loudness=\" + loudness;\n                  request = request + \"&valence=\" + valence;\n                  request = request + \"&max_number=\" + max_number;\n                  request = request + \"&order_by=\" + order_by;\n                  fetch(request)\n                  .then(response => response.json())\n                  .then(data => {\n                    if(data['status'] == 0){\n                      setView_response(\"Unsuccessful, please try again\");\n                      setRemove_response(\"\");\n                      setAdd_response(\"\");\n                      setExport_response(\"\");\n                    }else{\n                      setPlaylist(data['data']);\n                      setGroup_name(data['group_name']);\n                      setNames(data['names']);\n                      setView_response(\"\");\n                      setGAC(selected_group_id);\n                      setRemove_response(\"\");\n                      setAdd_response(\"\");\n                      setExport_response(\"\");\n                    }\n                  });\n                }}\n                >\n                View\n              </Button>\n              <Typography component=\"h1\" variant=\"h5\">\n                {view_response}\n              </Typography>\n              <Divider />\n              <Typography component=\"h1\" variant=\"h6\">\n                <br />\n                Add My Fav Songs to the group\n              </Typography>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={async () => {\n                  const group_id = GAC;\n                  const user_id = props.ui\n                  const info = {user_id, group_id};\n                  const response = await fetch(\"/add_fav_songs_to_group\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(info)\n                  });\n                  if(response.ok) {\n                    setAdd_response(\"Songs Added Successfully\");\n                    setRemove_s_name(\"\")\n                    setRemove_response(\"\");\n                    refresh_group_list();\n                    setExport_response(\"\");\n                  }else{\n                    setAdd_response(\"Unsuccessful, please try again\");\n                    setExport_response(\"\");\n                  }\n                }}\n                >\n                Add Fav Songs\n              </Button>\n              <Typography component=\"h5\" variant=\"body1\" className={classes.title}>\n                {add_response}\n              </Typography>\n              <Divider />\n              <Typography component=\"h1\" variant=\"h6\">\n                <br />\n                Remove Song from the Group\n              </Typography>\n              <Autocomplete\n                id=\"controllable-states-demo\"\n                options={playlist}\n                getOptionLabel={(option) => option.s_name}\n                renderInput={(params) => <TextField {...params} label=\"Sone Name\" variant=\"outlined\" />}\n                inputvalue={remove_s_name}\n                onInputChange={(event, newInputValue) => {setRemove_s_name(newInputValue);}}\n              />\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={async () => {\n                  var i;\n                  var s_id = \"NONE\";\n                  for (i = 0; i < playlist.length; i++){\n                    if(remove_s_name == playlist[i].s_name){\n                      s_id = playlist[i].s_id;\n                      break;\n                    }\n                  }\n                  const group_id = GAC;\n                  const info = {group_id, s_id};\n                  const response = await fetch(\"/remove_song_from_group\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(info)\n                  });\n\n                  if(response.ok) {\n                    setRemove_response(\"Songs Removed Successfully\");\n                    setRemove_s_name(\"\");\n                    setAdd_response(\"\");\n                    refresh_group_list();\n                    setExport_response(\"\");\n                  }else{\n                    setRemove_response(\"Unsuccessful, please try again\");\n                    setExport_response(\"\");\n                  }\n                }}\n                >\n                Remove\n              </Button>\n              <Typography component=\"h5\" variant=\"body1\" className={classes.title}>\n                {remove_response}\n              </Typography>\n              <Divider />\n              <Typography component=\"h5\" variant=\"h6\" className={classes.title}>\n                <br />\n                Export Songs to Spotify\n              </Typography>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"spotify_username\"\n                label= \"Spotify Username\"\n                name=\"spotify_username\"\n                autoComplete=\"spotify_username\"\n                value={spotify_username}\n                onChange={e => setSpotify_username(e.target.value)}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"playlist_uri\"\n                label= \"Spotify Playlist URI\"\n                name=\"playlist_uri\"\n                autoComplete=\"playlist_uri\"\n                value={spotify_playlist_id}\n                onChange={e => setSpotify_playlist_id(e.target.value)}\n              />\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={async () => {\n                  const username = spotify_username;\n                  const playlist_id = spotify_playlist_id;\n                  var i;\n                  var song_ids = [];\n                  for (i = 0; i < playlist.length; i++){\n                    song_ids.push(playlist[i].s_id);\n                  }\n                  const info = {username, playlist_id, song_ids};\n                  const response = await fetch(\"/add_songs_to_spotify\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(info)\n                  });\n\n                  if(response.ok) {\n                    setExport_response(\"Export Successfully\");\n                  }else{\n                    setExport_response(\"Unsuccessful, please try again\");\n                  }\n                }}\n                >\n                Export to Spotify\n              </Button>\n              <Typography component=\"h1\" variant=\"h5\">\n                {export_response}\n              </Typography>\n            </form>\n            \n          </div>\n        </Grid>\n        <Grid item xs={9}>\n          <div className={classes.paper}>\n            {group_name != \"\" ? (\n              <Typography component=\"h1\" variant=\"h5\">\n                {group_name} (Group Access Code: {GAC})\n                <br />\n                {names}\n              </Typography>\n            ):(\n              <Typography component=\"h1\" variant=\"h5\">\n              </Typography>\n            )}\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    {/* <TableCell align=\"right\">Song Order</TableCell> */}\n                    <TableCell align=\"left\">Song name</TableCell>\n                    <TableCell align=\"left\">Album</TableCell>\n                    <TableCell align=\"left\">Release Date</TableCell>\n                    <TableCell align=\"left\">Artists</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {playlist.map((playlist) => (\n                    <TableRow key={playlist.name}>\n                      <TableCell align=\"left\">{playlist.s_name}</TableCell>\n                      <TableCell align=\"left\">{playlist.album_name}</TableCell>\n                      <TableCell align=\"left\">{playlist.album_release_date}</TableCell>\n                      <TableCell align=\"left\">{playlist.artist_names}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nexport default MyGroups;"]},"metadata":{},"sourceType":"module"}