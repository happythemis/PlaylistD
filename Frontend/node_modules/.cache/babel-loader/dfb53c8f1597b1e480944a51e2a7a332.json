{"ast":null,"code":"var _jsxFileName = \"/Users/themislee/Documents/cs411finalFB/front_end/src/ChangePwd.js\";\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst ChangePwd = props => {\n  const classes = useStyles();\n  const [old_pwd, setOld_pwd] = useState(\"\");\n  const [new_pwd, setNew_pwd] = useState(\"\");\n  const [change_success, setChange_success] = useState(0);\n  const [change_fail, setChange_fail] = useState(0);\n\n  if (!props.ls) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \" Please sign in first\");\n  }\n\n  if (change_success) {\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"HomeNav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \" Password change successfully\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Change Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Old Password\",\n    type: \"password\",\n    id: \"old_password\",\n    autoComplete: \"current-password\",\n    value: old_pwd,\n    onChange: e => setOld_pwd(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"New Password\",\n    type: \"password\",\n    id: \"new_password\",\n    autoComplete: \"current-password\",\n    value: new_pwd,\n    onChange: p => setNew_pwd(p.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), change_fail ? /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Your old password input is wrong\") : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: async () => {\n      const user_id = props.ui;\n      const user_info = {\n        user_id,\n        old_pwd,\n        new_pwd\n      };\n      const response = await fetch(\"/change_pwd\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user_info)\n      });\n\n      if (response.ok) {\n        console.log(\"response worked!\");\n        setChange_success(1);\n      } else {\n        console.log(\"response Failed\");\n        setChange_fail(1);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Change Password\"))));\n};\n\nexport default ChangePwd;","map":{"version":3,"sources":["/Users/themislee/Documents/cs411finalFB/front_end/src/ChangePwd.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","makeStyles","Container","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","ChangePwd","props","classes","old_pwd","setOld_pwd","new_pwd","setNew_pwd","change_success","setChange_success","change_fail","setChange_fail","ls","e","target","value","p","user_id","ui","user_info","response","fetch","method","headers","body","JSON","stringify","ok","console","log"],"mappings":"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","sourcesContent":["import React, {useState}from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst ChangePwd = (props) => {\n  const classes = useStyles();\n  const [old_pwd, setOld_pwd] = useState(\"\");\n  const [new_pwd, setNew_pwd] = useState(\"\");\n  const [change_success, setChange_success] = useState(0)\n  const [change_fail, setChange_fail] = useState(0)\n\n  if(!props.ls){\n    return(\n        <h1> Please sign in first</h1>\n    );\n  }\n\n  if(change_success){\n      return(\n        <nav className = \"HomeNav\">\n          <h1> Password change successfully</h1>\n        </nav>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {/* <CssBaseline /> */}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Change Password\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Old Password\"\n            type=\"password\"\n            id=\"old_password\"\n            autoComplete=\"current-password\"\n            value={old_pwd}\n            onChange={e => setOld_pwd(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"New Password\"\n            type=\"password\"\n            id=\"new_password\"\n            autoComplete=\"current-password\"\n            value={new_pwd}\n            onChange={p => setNew_pwd(p.target.value)}\n          />\n          {change_fail ? (\n            <Typography component=\"h1\" variant=\"h5\">\n            Your old password input is wrong\n            </Typography>\n          ):(\n            <Typography component=\"h1\" variant=\"h5\">\n            </Typography>\n          )}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={async () => {\n              const user_id = props.ui;\n              const user_info = {user_id, old_pwd, new_pwd};\n              const response = await fetch(\"/change_pwd\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(user_info)\n              });\n\n              if(response.ok) {\n                console.log(\"response worked!\");\n                setChange_success(1);\n              }else{\n                console.log(\"response Failed\");\n                setChange_fail(1);\n              }\n            }}\n          >\n            Change Password\n          </Button>\n        </form>\n      </div>\n     \n    </Container>\n  );\n}\n\nexport default ChangePwd;\n"]},"metadata":{},"sourceType":"module"}